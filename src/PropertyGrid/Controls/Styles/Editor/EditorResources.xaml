<Styles
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:propertyEditing="clr-namespace:PropertyGrid.PropertyEditing"
    xmlns:converters="clr-namespace:PropertyGrid.Converters"
    xmlns:editors="clr-namespace:PropertyGrid.Editors"
    xmlns:design="clr-namespace:PropertyGrid.Design"
    xmlns:utils="clr-namespace:PropertyGrid.Utils"
    xmlns:controls="clr-namespace:PropertyGrid.Controls"
    xmlns:slider="clr-namespace:PropertyGrid.Controls.Slider"
    xmlns:pg="clr-namespace:PropertyGrid.Metadata">

    <Styles.Resources>
        <propertyEditing:NamedColorList x:Key="NamedColorList" />
        <converters:NullValueConverter x:Key="NullValueConverter" />
        <converters:EnumValueConverter x:Key="enumValueConverter" />
        <converters:ExpanderHeaderWidthConverter x:Key="expanderHeaderWidthConverter" />
        <converters:NumberRangeConverter x:Key="NumberRangeConverter" />


        <ControlTemplate x:Key="{x:Static editors:EditorKeys.ComplexPropertyEditorKey}">
            <Expander Classes="Property" DataContext="{Binding PropertyValue}">
                <Expander.Header>
                    <TextBlock Text="{Binding Value, Mode=OneWay}"
                               Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Expander}}, 
                   Mode=OneWay, Path=Width, Converter={StaticResource expanderHeaderWidthConverter}, ConverterParameter=-29}"
                               Foreground="{DynamicResource MahApps.Brushes.Black}" />
                </Expander.Header>
                <design:PropertyItemsLayout Grid.IsSharedSizeScope="True" Items="{Binding SubProperties}" />
            </Expander>
        </ControlTemplate>

        <ControlTemplate x:Key="{x:Static editors:EditorKeys.DefaultCategoryEditorKey}">
            <design:PropertyItemsLayout Items="{Binding Properties}" />
        </ControlTemplate>

        <!-- TextBox  Строковое свойство -->
        <!--Обратите внимание, что фиксация при вводе текста не может работать вместе с откатом, 
        поскольку фиксируется каждое нажатие клавиши и значение отката теряется-->
        <ControlTemplate x:Key="{x:Static editors:EditorKeys.DefaultEditorKey}">
            <TextBox x:Name="PART_editor" Classes="Property" DataContext="{Binding PropertyValue}"
                     Text="{Binding StringValue, Mode=TwoWay}"
                     IsReadOnly="{Binding IsReadOnly}"
                     ToolTip.Tip="{Binding StringValue}"
                     utils:TextBoxExtender.CommitOnEnter="true"
                     utils:TextBoxExtender.RollbackOnEscape="true"
                     utils:TextBoxExtender.CommitOnTyping="false" />
        </ControlTemplate>

        <!-- ComboBox -->
        <ControlTemplate x:Key="{x:Static editors:EditorKeys.EnumEditorKey}">
            <controls:EnumDropdown x:Name="PART_editor" DataContext="{Binding PropertyValue}"
                                   Background="{DynamicResource ThemeBackgroundBrush}"
                                   PropertyValue="{Binding}"
                                   IsEnabled="{Binding IsEditable}">
                <controls:EnumDropdown.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Path=., Converter={StaticResource enumValueConverter}}" />
                    </DataTemplate>
                </controls:EnumDropdown.ItemTemplate>
            </controls:EnumDropdown>
        </ControlTemplate>

        <!-- Коллекция. Кнопка "Изменить" -->
        <ControlTemplate x:Key="{x:Static editors:EditorKeys.ObservableCollectionEditorKey}">
            <Button Classes="Property" Content="Change"
                    DataContext="{Binding PropertyValue}"
                    Command="{Binding ButtonCommand}"
                    CommandParameter="{Binding Value}"
                    IsEnabled="{Binding IsEditable}" />
        </ControlTemplate>

        <ControlTemplate x:Key="{x:Static editors:EditorKeys.BooleanEditorKey}">
            <CheckBox x:Name="PART_editor"
                      DataContext="{Binding PropertyValue}"
                      IsChecked="{Binding Value}"
                      IsEnabled="{Binding IsEditable}" />
        </ControlTemplate>

        <ControlTemplate x:Key="{x:Static editors:EditorKeys.FontFamilyEditorKey}">
            <ComboBox x:Name="PART_editor"
                      DataContext="{Binding PropertyValue}"
                      SelectedItem="{Binding Value}"
                      Items="{Binding Source={x:Static FontFamily.Default}}"
                      IsEnabled="{Binding IsEditable}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" FontFamily="{Binding}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </ControlTemplate>

        <ControlTemplate x:Key="{x:Static editors:EditorKeys.NamedColorEditorKey}">
            <!--DataType="{x:Type pg:NamedColor}"-->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Rectangle Fill="{Binding Brush}" Grid.Column="0" Width="100" Height="20" Margin="2"
                           HorizontalAlignment="Center" />
                <TextBlock x:Name="PART_editor" Margin="5,2,2,2" Text="{Binding Name}" Grid.Column="1"
                           HorizontalAlignment="Center" />
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="{x:Static editors:EditorKeys.BrushEditorKey}">
            <!--
      -->
            <ComboBox x:Name="PART_editor"
                      Items="{Binding Source={StaticResource NamedColorList}}"
                      ItemTemplate="{DynamicResource {x:Static editors:EditorKeys.NamedColorEditorKey}}"
                      IsEnabled="{Binding IsEditable}" />
        </ControlTemplate>

        <ControlTemplate x:Key="{x:Static editors:EditorKeys.SliderEditorKey}">
            <StackPanel VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Height="24"
                        Background="{DynamicResource ThemeBackgroundBrush}">
                <slider:SliderEx x:Name="PART_editor" DataContext="{Binding PropertyValue}"
                                 VerticalAlignment="Center" Margin="2"
                                 Value="{Binding  Value, Mode=OneWay}"
                                 Minimum="{Binding ParentProperty,Converter={StaticResource NumberRangeConverter},
                                  ConverterParameter={x:Static pg:NumberRangeType.Minimum},
                                  FallbackValue=0}"
                                 Maximum="{Binding ParentProperty,Converter={StaticResource NumberRangeConverter},                         ConverterParameter={x:Static pg:NumberRangeType.Maximum},
                         FallbackValue=100}"
                                 TickFrequency="{Binding ParentProperty,Converter={StaticResource NumberRangeConverter},
                         ConverterParameter={x:Static pg:NumberRangeType.Tick},
                         FallbackValue=1}"
                                 IsEnabled="{Binding IsEditable}"
                                 IsDirectionReversed="False"
                                 IsMoveToPointEnabled="True"
                                 IsSnapToTickEnabled="False"

                                 AutoToolTipPlacement="BottomRight"
                                 AutoToolTipPrecision="{Binding ParentProperty,Converter={StaticResource NumberRangeConverter},
                        ConverterParameter={x:Static pg:NumberRangeType.Precision},
                        FallbackValue=0}"

                                 Foreground="{DynamicResource MahApps.Brushes.Black}" />
            </StackPanel>

        </ControlTemplate>


        <ControlTemplate x:Key="{x:Static editors:EditorKeys.PasswordEditorKey}">
            <!--pg:PasswordBoxExtender.BindPassword="true"
      pg:PasswordBoxExtender.BoundPassword="{Binding StringValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"-->
            <StackPanel VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                        Background="{DynamicResource ThemeBackgroundBrush}" DataContext="{Binding PropertyValue}">
                <TextBox PasswordChar="*"
                         Text="{Binding StringValue, Mode=TwoWay}"
                         x:Name="PART_editor"
                         IsEnabled="{Binding IsEditable}" />
            </StackPanel>
        </ControlTemplate>

        <ControlTemplate x:Key="{x:Static editors:EditorKeys.DoubleEditorKey}">
            <editors:DoubleEditor x:Name="PART_editor" DataContext="{Binding PropertyValue}"
                                  Value="{Binding Value, Mode=TwoWay}"
                                  Minimum="{Binding ParentProperty,Converter={StaticResource NumberRangeConverter},
                         ConverterParameter={x:Static pg:NumberRangeType.Minimum},
                         FallbackValue=0}"
                                  Maximum="{Binding ParentProperty,Converter={StaticResource NumberRangeConverter},
                  ConverterParameter={x:Static pg:NumberRangeType.Maximum},
                  FallbackValue=100}"

                                  DefaultChange="{Binding ParentProperty,Converter={StaticResource NumberRangeConverter},
                          ConverterParameter={x:Static pg:NumberRangeType.Tick}}"

                                  MaxPrecision="{Binding ParentProperty,Converter={StaticResource NumberRangeConverter},
                          ConverterParameter={x:Static pg:NumberRangeType.Precision}}"
                                  IsEnabled="{Binding IsEditable}" />
        </ControlTemplate>
    </Styles.Resources>


</Styles>